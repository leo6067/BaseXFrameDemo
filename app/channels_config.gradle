apply plugin: 'walle'


android {

//    defaultConfig {
//        buildConfigField "String", "CHANNEL_TYPE", "\"${rootProject.ext.android.channel}\""
//    }

    signingConfigs {
        normal {//西柚，桃乐，果果
            // 签名store文件路径
            storeFile file(rootProject.ext.android.storeFile)
            // 签名store文件的密码
            storePassword rootProject.ext.android.storePassword
            // 别名
            keyAlias rootProject.ext.android.keyAlias
            // 别名的密码
            keyPassword rootProject.ext.android.keyPassword
        }



        haolu {//好鹿
            // 签名store文件路径
            storeFile file(rootProject.ext.android.dqStoreFile)
            // 签名store文件的密码
            storePassword rootProject.ext.android.dqStorePassword
            // 别名
            keyAlias rootProject.ext.android.dqKeyAlias
            // 别名的密码
            keyPassword rootProject.ext.android.dqKeyPassword
        }
    }

    //walle多渠道和马甲包配置
    productFlavors {
        xysp {
            applicationId "com.xy.basedemo"
            versionCode rootProject.ext.android.versionCode
            versionName rootProject.ext.android.versionName
            manifestPlaceholders = [
                    //友盟配置
                    APP_CHANNEL_VALUE : "xysp_yingyongbao",
            ]
            buildConfigField "String", "APPTYPE", "\"xysp\""

//这个字段会关联到BuildConfig配置  可以动态读取和配置，用来做不同马甲包的各种样式和功能配置
            signingConfig signingConfigs.normal
        }
        tlsp {//特殊的桃乐，所有配置均与茜柚一直，包括包名都要一样的，并不是我忘记改了，不要问我为什么，接受事实就好
            applicationId "com.mg.xyvideo"
            versionCode rootProject.ext.android.versionCode
            versionName rootProject.ext.android.versionName
            manifestPlaceholders = [
                    UMENG_APPKEY      : "5d59ff453fc195a47d000c8c",
                    //友盟配置
                    APP_CHANNEL_VALUE : "tlsp_yingyongbao",
            ]

            // 友盟
            buildConfigField "String", "UM_PUSH_SECRET", "\"d143e8fde23aa21397d80c97a71e03e5\""
            signingConfig signingConfigs.normal
        }
    }
}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/${rootProject.ext.android.channel}")
    println ">>>>>> apkOutputFolder = ${apkOutputFolder.getAbsolutePath()}"
    // 定制渠道包的APK的文件名称 ${appName}-${packageName}-${channels_hhcr}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk
    apkFileNameFormat = '${appName}_${channel}-v${versionName}-${versionCode}-${buildTime}.apk'

    // 渠道配置文件
//    channelFile = new File("${project.getProjectDir()}/channels/channels_${rootProject.ext.channel}")
//    channelFile = new File("${project.getProjectDir()}/channel")
//    : rootProject.file('channel_file')
    channelFile =    new File("${project.getProjectDir()}/channel")
    println ">>>>>> channelFile = ${channelFile.getAbsolutePath()}"
}
